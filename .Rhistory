var.score <- c(85,90,93,86,82)
# 평균값 mean()
mean(var.score)
# 중앙값 median()
median(var.score)
# 분산 var()
var(var.score)
# 표준편차 sd()
sd(var.score)
(var.age <- c(19,20,20,30,32,33,45,40,60,50,
54,25,35,44,46,70,80,24,22,11,
66,15,22,8,6,9,24,24,26,40)
)
(var.age <- c(19,20,20,30,32,33,45,40,60,50,
54,25,35,44,46,70,80,24,22,11,
66,15,22,8,6,9,24,24,26,40)
)
length(var.age)
var.target <- cut(var.age,
breaks = c(0,10,20,30,40,50,Inf))
## default : 이상~미만
## right = F : 초과~이하
var.target
table(var.target)
## 구간별로 빈도수 계산
(var.age <- c(19,20,20,30,32,33,45,40,60,50,
54,25,35,44,46,70,80,24,22,11,
66,15,22,8,6,9,24,24,26,40)
)
length(var.age) #몇개의 케이스가 있는 지 확인
var.target <- cut(var.age,
breaks = c(0,10,20,30,40,50,Inf))
## default : 이상~미만
## right = F : 초과~이하
var.target
table(var.target)
## 구간별로 빈도수 계산
data.frame(table(var.target))
var.csv <- "https://www.dropbox.com/s/zrhncs2upafd3kb/example__salary__.csv?dl=1"
var.salary <- read.csv(
var.csv,
stringsAsFactors = T, ##대표값으로 바뀌지 않게 STRING 값으로 유지
na = "-", #결측값은 "-"로 변경
)
var.csv <- "https://www.dropbox.com/s/mawf3fo98336iua/example_salary.csv?dl=1"
var.csv <- "https://www.dropbox.com/s/mawf3fo98336iua/example_salary.csv?dl=1"
var.salary <- read.csv(
var.csv,
stringsAsFactors = T, ##대표값으로 바뀌지 않게 STRING 값으로 유지
na = "-", #결측값은 "-"로 변경
)
head(var.salary)
colnames(var.salary) <- c(
"age","salary","special salary", "workinghour", "number of worker", "career", "gender"
)
colnames(var.salary) <- c(
"age","salary","special salary", "workinghour", "number of worker", "career", "gender"
)
str(var.salary)
var.csv <- "https://www.dropbox.com/s/mawf3fo98336iua/example_salary.csv?dl=1"
var.salary <- read.csv(
var.csv,
stringsAsFactors = T, ##대표값으로 바뀌지 않게 STRING 값으로 유지
na = "-" #결측값은 "-"로 변경
)
head(var.salary)
colnames(var.salary) <- c(
"age","salary","special salary", "workinghour", "number of worker", "career", "gender"
)
str(var.salary)
####step4.대표값_평균 구하기
var.mean <- mean(var.salary$salary, na.rm = T)
var.mean
####step1.데이터 로딩
var.csv <- "https://www.dropbox.com/s/mawf3fo98336iua/example_salary.csv?dl=1"
var.salary <- read.csv(
var.csv,
stringsAsFactors = T, ##대표값으로 바뀌지 않게 STRING 값으로 유지
na = "-" #결측값은 "-"로 변경
)
####step2.데이터프레임 생성
head(var.salary)
colnames(var.salary) <- c(
"age","salary","special salary", "workinghour", "number of worker", "career", "gender"
)
str(var.salary)
# 변수명 참고
# 'data.frame':	100 obs. of  7 variables:
#  $ age             : Factor w/ 10 levels "-19","20-24",..: 1 2 3 4 5 6 7 8 9 10 ...
#  $ salary          : num  1346534 1584214 1922043 2130988 2414345 ...
#  $ special salary  : num  151840 115375 268058 335710 352816 ...
#  $ workinghour     : num  170 180 178 181 181 ...
#  $ number of worker: num  15042 74251 143338 103585 65385 ...
#  $ career          : Factor w/ 5 levels "1~3년미만","10년이상",..: 3 3 3 3 3 3 3 3 3 3 ...
#  $ gender          : Factor w/ 2 levels "남","여": 1 1 1 1 1 1 1 1 1 1 ...
####step3.검색 목록에 데이터프레임 로딩
detach(var.salary) ## 기존 var.salary라는 검색목록이 있다면 삭제
attach(var.salary) ## 지금 내가 만든 변수로 대체
####step4.대표값_평균 구하기
var.mean <- mean(var.salary$salary, na.rm = T)
var.mean
####step5.대표값_중앙값 구하기
var.median <- median(var.salary$salary, na.rm = T)
var.median
####임금 평균과 중앙값의 차이가 거의 없기 때문에 outlier가 없고, 한 쪽으로 치우쳐있지 않음
#### step6.임금의 범위 구하기
var.range <- range(var.salary$salary, na.rm = T)
####임금 평균과 중앙값의 차이가 거의 없기 때문에 outlier가 없고, 한 쪽으로 치우쳐있지 않음
#### step6.임금의 범위 구하기
var.range <- range(salary, na.rm = T)
####step4.대표값_평균 구하기
var.mean <- mean(var.salary$salary, na.rm = T)
var.mean
var.range
var.lowest <- which(salary==1117605)
#which 조건에 해당하는
var.lowest
var.highest <- which(salary==4064286)
var.highest
